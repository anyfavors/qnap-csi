apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "qnap-csi.controllerDeploymentName" . }}
  labels:
    {{- include "qnap-csi.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  selector:
    matchLabels:
      {{- include "qnap-csi.controllerSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "qnap-csi.controllerSelectorLabels" . | nindent 8 }}
      {{- with .Values.controller.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "qnap-csi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.controller.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
          args:
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--url=$(QNAP_URL)"
            - "--portal=$(QNAP_PORTAL)"
            - "--node-id=$(NODE_ID)"
            - "--log-level=debug"
            - "--controller"
            - "--storage-pool-id=$(QNAP_STORAGEPOOL_ID)"
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
            - name: QNAP_URL
              value: {{ .Values.QNAPSettings.URL | quote }}
            - name: QNAP_PORTAL
              value: {{ .Values.QNAPSettings.portal | quote }}
            - name: QNAP_STORAGEPOOL_ID
              value: {{ .Values.QNAPSettings.storagePoolID | quote }}
            - name: QNAP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.QNAPSettings.credentialsSecretName }}
                  key: username
            - name: QNAP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.QNAPSettings.credentialsSecretName }}
                  key: password
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-provisioner
          image: quay.io/k8scsi/csi-provisioner:v1.6.0
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-attacher
          image: quay.io/k8scsi/csi-attacher:v2.2.0
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
      volumes:
        - name: socket-dir
          emptyDir: {}
